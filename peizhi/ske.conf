// ⚠️注意⚠️: 以 “;” 或 “#” 或 “//” 开头的行为注释行。

// >脚本名称           Quantumult X懒人配置
// >脚本作者           林阿斗
// >脚本版本           1.1
// >更新时间           2024/6/24
// >微信               公众号:林阿斗
// >脚本链接           https://github.com/3488888725/Quantumult-X/blob/main/peizhi/ske.conf
// >使用说明           此脚本仅供个人自用，请勿用于其他方面！

# > 建议在「其他设置」里「GeoLite2」的「来源」填写使用下面链接「任选一个」，并开启「自动更新」
; https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country.mmdb
; https://raw.githubusercontent.com/Hackl0us/GeoIP2-CN/release/Country.mmdb

# > general 模块内为一些通用的设置参数项
[general]
# > 用于节点延迟测试，Quantumult X会对server_check_url指定的网址进行相应测试，以确定节点的可用性(下面的server_check_url可以自己选一个)
# > 你同样可以在 server_local/remote 中，为节点、订阅单独指定server_check_url参数
# > 如您为节点单独指定了 url，则所有相关延迟测试中，均会采用此 url 地址
server_check_url= http://www.gstatic.com/generate_204
;server_check_url=http://cp.cloudflare.com/generate_204 
;server_check_url= http://www.qualcomm.cn/generate_204 
;server_check_url=http://captive.apple.com/generate_204 
;server_check_url =http://www.google.com/generate_204

# > 服务器测试超时时间 (毫秒)，需小于 5000 毫秒才生效
server_check_timeout = 2000

# > 配置文件路径显示头像
profile_img_url=https://raw.githubusercontent.com/3488888725/tuku/main/mingren.png

# > geo_location_checker用于节点页面的节点信息展示，可完整自定义展示内容与方式，下面是KOP-XIAO大佬的api及获取、展示节点信息的 js
geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/IP_API.js

# > 功能强大的解析器，用于引用资源的转换，可用于自定义各类远程资源的转换，如节点,规则filter,复写rewrite等,url地址可远程,可本地/iCloud(Quantumult X/Scripts目录)
resource_parser_url=https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/resource-parser.js
 
# > 下列路径将不经过QuanX的处理
excluded_routes=239.255.255.250/32, 24.105.30.129/32, 185.60.112.157/32, 185.60.112.158/32, 182.162.132.1/32
udp_whitelist=1-442, 444-65535

# list中的域名将不使用fake-ip方式, 多个域名用“, ”连接。其它域名则全部采用 fake-ip及远程解析的模式 
dns_exclusion_list = *.cmbchina.com, *.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, *.pingan.com.cn, id6.me

# > 第一个filter为4g模式开启规则分流，第二个filter为其他wifi下开启规则分流，第三个wifi1修改成你路由器翻墙的wifi名开启直连模式，第四个wifi2为你公司或者其他有路由器翻墙的WiFi名走直连）
# > 默认关闭根据wifi切换模式，如需开启，删除下方的"#"即可
#running_mode_trigger=filter, filter, wifi1:all_direct, wifi2: all_direct


[task_local]
//js脚本定时任务加这里
# > 请手动添加下面的订阅（流媒体Task订阅集合）
; https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/UI-Action.json
# > 流媒体解锁查询
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/streaming-ui-check.js, tag=流媒体解锁查询, img-url=arrowtriangle.right.square.system, enabled=true

# > 包含3种类型: cron 定时任务，UI交互脚本，网络切换脚本
//1 任务模块，可用于签到,天气话费查询等
;js文件放于iCloud或者本机的Quantumult X/Scripts 路径下。TF版本可直接使用远程js链接
;从 “分” 开始的5位cron 写法，具体 cron 表达式可自行 Google
;比如上述语句 代表每天 12 点 2 分，自动执行一次;
;tag参数为 task 命名标识;
;img-url参数用于指定 task 的图标(108*108)
;2 12 * * * sample.js, tag=本地示范(左滑编辑，右滑执行), enabled=false, img-url=https://raw.githubusercontent.com/crossutility/Quantumult-X/master/quantumult-x.png
;13 12 * * * https://raw.githubusercontent.com/crossutility/Quantumult-X/master/sample-task.js, tag=远程示范(点击缓存/更新脚本), enabled=false, img-url=https://raw.githubusercontent.com/crossutility/Quantumult-X/master/quantumult-x.png
//2 UI交互查询脚本示范，在首页长按 节点/策略组 唤出
;event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/streaming-ui-check.js, tag = 流媒体 - 解锁查询, img-url=checkmark.seal.system, enabled=true
//3 网络切换/变化时 触发的脚本类型
;event-network sample-taks.js

[rewrite_local]
//本地重写添加在这里
//支持本地/iCloud的复写规则文件，位于Quantumult X/Profiles路径下
//rewrite.txt, tag=本地复写, opt-parser=false, enabled=false

[rewrite_remote]
#远程复写模块，内包含主机名hostname以及复写rewrite规则
# update-interval 为更新时间参数，单位 秒, 默认更新时间为 24*60*60=86400 秒，也就是24小时.
# opt-parser=true/false 用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器;

# > 解锁spotify会员
https://raw.githubusercontent.com/app2smile/rules/master/module/spotify.conf, tag=Spotify音乐@app2smile, update-interval=86400, opt-parser=false, enabled=true

# > 通用去广告
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/QuantumultX/Advertising/Advertising.conf, tag=去广告重写@blackmatrix7, update-interval=86400, opt-parser=false, enabled=true
https://raw.githubusercontent.com/ddgksf2013/Rewrite/master/AdBlock/StartUp.conf, tag=墨鱼去开屏2.0@ddgksf2013, update-interval=86400, opt-parser=true, enabled=true

# > 其他重写
https://raw.githubusercontent.com/Orz-3/QuantumultX/master/JD_TB_price.conf, tag=比价脚本@Orz-3, update-interval=86400, opt-parser=false, enabled=true
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.quanx.conf, tag=BoxJS商店版@chavyleung, update-interval=86400, opt-parser=false, enabled=true
https://raw.githubusercontents.com/app2smile/rules/master/module/baidu-no-redirect.sgmodule, tag=优化百度跳转, update-interval=172800, opt-parser=true, enabled=true

# > 应用增强
https://raw.githubusercontent.com/NobyDa/Script/master/TestFlight/TestFlightAccount.js, tag=TestFlight账户管理, update-interval=-1, opt-parser=true, enabled=true
https://raw.githubusercontent.com/zZPiglet/Task/master/UnblockURLinWeChat.conf, tag=微信解锁被屏蔽的URL@zZPiglet, update-interval=86400, opt-parser=false, enabled=true
https://raw.githubusercontent.com/Orz-3/QuantumultX/master/TikTok.conf, tag=Tiktok解锁[需旧版V21]@Orz-3, update-interval=86400, opt-parser=false, enabled=true


[server_local]
//本地节点在这里填写
# 以下示范都是 ip(域名):端口，
# 比如 vmess-a.203.167.55.4:777 ，实际是 203.167.55.4:777
# 前面的 ss-a，ws-tls这些，只是为了让你快速找到自己节点的类型
# 实际使用时，请不要真的 傻乎乎的 写 vmess-a.203.167.55.4:777 这种。
# 目前支持 shadowsocks/shadowsocksR/Vmess/Trojan/http(s)/Socks5 等类型
# 支持 tls-cert-sha256 以及 tls-pubkey-sha256 参数等自定义TLS验证

#shadowsocks以及shadowsocksR类型, 支持 V2-Plugin
#支持UDP，支持UDP-OVER-TCP（版本1.0.29 665+）
;shadowsocks=ss-a.example.com:80, method=chacha20, password=pwd, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, server_check_url=http://www.apple.com/generate_204, tag=Sample-A
;shadowsocks=ss-b.example.com:80, method=chacha20, password=pwd, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, tag=Sample-B
;shadowsocks=ss-c.example.com:443, method=chacha20, password=pwd, obfs=tls, obfs-host=bing.com, fast-open=false, udp-relay=false, tag=Sample-C
;shadowsocks=ssr-a.example.com:443, method=chacha20, password=pwd, ssr-protocol=auth_chain_b, ssr-protocol-param=def, obfs=tls1.2_ticket_fastauth, obfs-host=bing.com, tag=Sample-D
;shadowsocks=ws-a.example.com:80, method=aes-128-gcm, password=pwd, obfs=ws, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=Sample-E
;shadowsocks=ws-b.example.com:80, method=aes-128-gcm, password=pwd, obfs=ws, fast-open=false, udp-relay=false, tag=Sample-F
;shadowsocks=ws-tls-a.example.com:443, method=aes-128-gcm, password=pwd, obfs=wss, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=Sample-G
;shadowsocks=ws-tls-a.example.com:443, method=aes-128-gcm, password=pwd, udp-over-tcp=true fast-open=false, udp-relay=false, tag=Sample-H

# vmess 类型，ws，wss(ws+tls),over-tls,tcp，支持 UDP
# vmess 类型节点默认开启 aead，关闭请用 aead=false
; ws 类型
;vmess=ws-c.example.com:80, method=chacha20-ietf-poly1305, password= 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs-host=ws-c.example.com, obfs=ws, obfs-uri=/ws, fast-open=false, udp-relay=false, aead=false, tag=Sample-H
; wss(ws+tls) 类型
;vmess=ws-tls-b.example.com:443, method=chacha20-ietf-poly1305, password= 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs-host=ws-tls-b.example.com, obfs=wss, obfs-uri=/ws, tls-verification=true,fast-open=false, udp-relay=false, tag=Sample-I
; http 类型
;vmess=example.com:80, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, server_check_url=http://www.apple.com/generate_204, tag=vmess-http
; tcp 类型
;vmess=vmess-a.example.com:80, method=aes-128-gcm, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open=false, udp-relay=false, tag=Sample-J
;vmess=vmess-b.example.com:80, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open=false, udp-relay=false, tag=Sample-K
; over-tls 类型
;vmess=vmess-over-tls.example.com:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs-host=vmess-over-tls.example.com, obfs=over-tls, tls-verification=true, fast-open=false, udp-relay=false, tag=Sample-L

; http(s) 类型
;http=http.example.com:80, username=name, password=pwd, fast-open=false, udp-relay=false, tag=http
;http=https.example.com:443, username=name, password=pwd, over-tls=true, tls-verification=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=http-tls

# socks5 类型节点
;socks5=example.com:80,fast-open=false, udp-relay=false, tag=socks5-01
;socks5=example.com:80, username=name, password=pwd, fast-open=false, udp-relay=false, tag=socks5-02
;socks5=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=socks5-tls-01
;socks5=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls-pubkey-sha256=eb5ec6684564fd0d04975903ed75342d1b9fdc2096ea54b4cf8caf4740f4ae25, fast-open=false, udp-relay=false, tag=socks5-tls-02

; trojan 类型, 支持 over-tls 以及 websockets，支持 UDP
;trojan=example.com:443, password=pwd, over-tls=true, tls-verification=true, fast-open=false, udp-relay=true, tag=trojan-tls-01
;trojan=example1.com:443, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=trojan-tls-02
;trojan=192.168.1.1:443, password=pwd, obfs=wss, obfs-host=example.com, obfs-uri=/path, udp-relay=true, tag=trojan-wss-05


[server_remote]
#远程服务器订阅模块，可直接订阅SSR，SS链接，以及Quantumult X格式的vmess/trojan/https订阅
#其它格式可用 opt-parser 参数开启解析器导入使用
#img-url参数用于指定图标，格式要求同样为 108*108 的 png 图片，可远程，可本地
#https://raw.githubusercontent.com/crossutility/Quantumult-X/master/server.snippet#rename=[香港], tag=URI格式示范(请导入自己订阅), update-interval=86400, opt-parser=true,  img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Quantumult_X.png, enabled=true
#https://raw.githubusercontent.com/crossutility/Quantumult-X/master/server-complete.snippet, tag=QuanX格式示范(导入后删除这两个示范),  img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Quantumult_X.png, enabled=true

#支持本地/iCloud的节点文件/片段，位于Quantumult X/Profiles路径下
;servers.snippet, tag=本地服务器, img-url=https://raw.githubusercontent.com/crossutility/Quantumult-X/master/quantumult-x.png, enabled=false

#规则分流远程订阅

[dns]
// >dns相关内容介绍
# > 如果你并不想使用系统 (通过 DHCP) 自动获取的 DNS 设置，可以如上设置，但需要注意应该设置至少一条自定义 DNS，如上述的 server = 119.29.29.29
# > 当设置 doh-server (DNS over HTTPS) 或 doq-server (DNS over QUIC)时，system 和所有其他未加密的常规 (没有特定的域与之绑定) 服务器将被忽略。
# > 多个(并发查询)doh-server 应配置在一行中，URLs 应以逗号分开。
# > 如果 iOS 版本小于 iOS 13.0，最大的 doh-server 数量将被限制为 1；如果 iOS 版本小于iOS 15.0，最大的 doh-server 数量将被限制为 2。
# > 当使用的 doh-server 不是基于 HTTP/2 时，DoH 将被暂时禁用，普通的服务器将被使用，直到下次启动 VPN 连接。
# > 当 prefer-doh3 被设置时，DoH 将尝试通过 HTTP/3 的查询，如果失败，查询连接将退回到 HTTP/2。
# > 由于 HTTP/2 和 HTTP/3 连接都支持复用，当改变该设置时它可能不会立即生效，但可以通过重新连接Quantumult X 隧道或手动改变当前网络环境，让它立即生效。
# > no-system 禁用系统dns
# > no-ipv6 禁用ipv6

//禁用系统 DNS（no-system） 以及 ipv6
;no-system
;no-ipv6

// circumvent-ipv4-answer, circumvent-ipv6-answer 参数
//1、当并发向多个上游 DNS 进行查询时，如响应最快的上游 DNS 抢答的结果命中了该条目，则 Quantumult X Tunnel DNS 模块会等待其他 DNS 服务器的响应结果（如抢答的结果中至少有一个不属于该条目，则不会等待其他 DNS 的响应，此时有效结果采用不属于该条目的所有记录）
//2、如所有上游 DNS 返回的所有结果均命中该条目，则判定为 DNS 查询失败
//3、如配置的上游 DNS 包含有去广告功能的 DNS 服务器，请勿使用该参数
;circumvent-ipv4-answer = 127.0.0.1, 0.0.0.0
;circumvent-ipv6-answer = ::
//如需使用 DoH3，DNS over HTTP/3，请开启下面参数
;prefer-doh3

doh-server = https://223.5.5.5/dns-query, https://223.6.6.6/dns-query
server=/*icloud.com/119.29.29.29
server=/*icloud.com.cn/119.29.29.29
server=/*tencent.com/119.29.29.29
server=/*weixin.com/119.29.29.29
 
 # 指定的 dns服务器，并发响应选取最优结果
 server=119.29.29.29 
 server=223.5.5.5 
 server=1.0.0.1 
 server=8.8.4.4 
 server=114.114.114.114 
 server=202.141.176.93  
 server=202.141.178.13 
 server=117.50.10.10 
 server=223.5.5.5 
 server=119.29.29.29:53 
 server=119.28.28.28 
 
;如指定 doh 服务，则👆️上面的一般 dns 解析均失效 额外参数，在特定网络下禁用该 doh
;doh-server=xxx.com, excluded_ssids=SSID1, SSID2
; 1.0.29 版本后支持多个 doh 并发，👇
;doh-server=xx1.com,xx2.com,excluded_ssids=SSID1, SSID2
; 1.0.29 版本后支持 alias 映射类型
;alias=/example.com/another-example.com

;如指定了 DoQ 服务，则 DoH 以及其它 dns解析均失效
;doq-server = quic://dns.adguard.com
;doq-server = quic://dns1.example.com, quic://dns2.example.com
;doq-server = quic://dns.adguard.com, excluded_ssids=SSID1
;doq-server = quic://dns.adguard.com, included_ssids=SSID2
 
 # 指定域名解析dns, 下面为示范，按需启用, 同样支持 excluded_ssids/included_ssids 参数
 server=/*.taobao.com/223.5.5.5 
 server=/*.tmall.com/223.5.5.5 
 server=/*.alipay.com/223.5.5.5 
 server=/*.alicdn.com/223.5.5.5 
 server=/*.aliyun.com/223.5.5.5 
 server=/*.jd.com/119.28.28.28 
 server=/*.qq.com/119.28.28.28 
 server=/*.tencent.com/119.28.28.28 
 server=/*.weixin.com/119.28.28.28 
 server=/*.bilibili.com/119.29.29.29 
 server=/hdslb.com/119.29.29.29 
 server=/*.163.com/119.29.29.29 
 server=/*.126.com/119.29.29.29 
 server=/*.126.net/119.29.29.29 
 server=/*.127.net/119.29.29.29 
 server=/*.netease.com/119.29.29.29 
 server=/*.mi.com/119.29.29.29 
 server=/*.xiaomi.com/119.29.29.29 
 address=/mtalk.google.com/108.177.125.188
;server=/example1.com/8.8.4.4
;server=/*.example2.com/223.5.5.5
;server=/example4.com/[2001:4860:4860::8888]:53
;address=/example5.com/192.168.16.18
;address=/example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]
//映射域名到其它域名的类型
;alias = /example7.com/another-example.com

[policy]
# 策略不用修改，图标可以修改为自己喜欢的 (图标修改:profile_img_url = http://***.png,链接填入自己的)
# static 策略组中，你需要手动选择想要的节点/策略组。
# available 策略组将按顺序选择你列表中第一个可用的节点。
# round-robin 策略组，将按列表的顺序轮流使用其中的节点。
# url-latency-benchmark 延迟策略组，选取延迟最优节点。
# dest-hash 策略组，随机负载均衡，但相同域名走固定节点。
# ssid 策略组，将根据你所设定的网络来自动切换节点/策略组
;img-url 参数用于指定策略组图标，可远程，也可本地/iCloud(Quantumult X/Images路径下) （108*108 大小）
;direct/proxy/reject 则只能用本地图标，名字分别为 direct.png, proxy.png,reject.png 放置于 Images 文件夹下即可生效 (108*108 大小)

static=全球加速, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 特殊节点, proxy, direct, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Global.png
static=苹果服务, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 特殊节点, proxy, direct, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Apple.png
static=港台番剧, 香港节点, 台湾节点, direct, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/StreamingSE.png
static=国际媒体, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 特殊节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Streaming.png
static=电报代理, 狮城节点, proxy, direct, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Telegram.png
static=黑白名单, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 特殊节点, proxy, direct, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Final.png
static=特殊节点, server-tag-regex=^(?!.*(港|台|日|韩|坡|美|HK|US|TW|JP|KR|SG|Hong|Tai|Japan|Korea|Singapore|States)), img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Static.png
url-latency-benchmark=香港节点, server-tag-regex=(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|美)).)*$, check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
url-latency-benchmark=台湾节点, server-tag-regex=(?=.*(台|TW|(?i)Taiwan))^((?!(港|日|韩|新|美)).)*$, check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png
url-latency-benchmark=日本节点, server-tag-regex=(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$, check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png
url-latency-benchmark=韩国节点, server-tag-regex=(?=.*(韩|韓|朝|KR|(?i)Korea))^((?!(港|台|日|新|美)).)*$, check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png
url-latency-benchmark=狮城节点, server-tag-regex=(?=.*(新|狮|獅|SG|(?i)Singapore))^((?!(港|台|日|韩|兰|美)).)*$, check-interval=600, tolerance=0, alive-checking=false, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
url-latency-benchmark=美国节点, server-tag-regex=(?=.*(美|US|(?i)States|American))^((?!(港|台|日|韩|新)).)*$, check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png

#server-tag-regex 以及 resource-tag-regex 参数用于正则筛选来建立策略组

#以下是quantumultX的3普通种策略组类型写法，也可以用正则参数 server-tag-regex 或者 resource-tag-regex 来筛选
;static=policy-name-1, Sample-A, Sample-B, Sample-C
;available=policy-name-2, Sample-A, Sample-B, Sample-C
;round-robin=policy-name-3, Sample-A, Sample-B, Sample-C
;url-latency-benchmark=policy-name-4, Sample-A, Sample-B, Sample-C
;dest-hash=policy-name-5, Sample-A, Sample-B, Sample-C
#下面是ssid策略组示范
;ssid=policy-name-4, Sample-A, Sample-B, LINK_22E171:Sample-B, LINK_22E172:Sample-C

# "tag" 跟 "enabled" 为可选参数，分别表示 “标签”及“开启状态”, true 为开启，false 关闭.
# update-interval 为更新时间参数，单位 秒, 默认更新时间为 24*60*60=86400 秒，也就是24小时.
# opt-parser=true/false 用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器;


[filter_remote]
#远程分流模块，可使用force-policy来强制使用策略偏好, 替换远程规则内所指定的策略组
;同样的
# update-interval 为更新时间参数，单位 秒, 默认更新时间为 24*60*60=86400 秒，也就是24小时.
# opt-parser=true/false 用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器;
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Direct+.list, tag=直连修正, force-policy=direct, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Advertising.list, tag=广告拦截, force-policy=reject, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Hijacking.list, tag=运营劫持, force-policy=reject, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Tracking.list, tag=隐私保护, force-policy=reject, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Streaming/Video/TikTok.list, tag=海外抖音, force-policy=全球加速, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Google/GoogleVoice.list, tag=谷歌语音, force-policy=美国节点, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Telegram.list, tag=电报代理, force-policy=电报代理, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Streaming/!CN.list, tag=国际媒体, force-policy=国际媒体, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Streaming/CN.list, tag=港台番剧, force-policy=港台番剧, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Proxy.list, tag=全球加速, force-policy=全球加速, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Apple/Apple.list, tag=苹果服务, force-policy=苹果服务, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Direct.list, tag=国内网站, force-policy=direct, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/WeChat.list, tag=微信直连, force-policy=direct, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Proxy+.list, tag=代理修正, force-policy=proxy, update-interval=172800, opt-parser=true, enabled=true

#支持本地/iCloud规则文件，位于Quantumult X/Profiles路径下
;filter.txt, tag=本地分流, enabled=false


[filter_local]
// 如开启其他设置中的  “分流匹配优化” 选项，则匹配优先级为👇
// host > host-suffix > host-keyword(wildcard) > geoip = ip-cidr > user-agennt

// 完整域名匹配
;host, www.google.com, proxy
// 域名关键词匹配
;host-keyword, adsite, reject
// 域名后缀匹配
;host-suffix, googleapis.com, proxy
// 域名通配符匹配
;host-wildcard, *abc.com, proxy

// User-Agent 匹配
;user-agent, ?abc*, proxy

//强制分流走蜂窝网络
;host-suffix, googleapis.com, proxy, force-cellular
//让分流走蜂窝网络跟 Wi-Fi 中的优选结果
;host-suffix, googleapis.com, proxy, multi-interface
//让分流走蜂窝网络跟 Wi-Fi 中的负载均衡，提供更大带宽出入接口
;host-suffix, googleapis.com, proxy, multi-interface-balance
//指定分流走特定网络接口
;host-suffix, googleapis.com, proxy, via-interface=pdp_ip0

// %TUN% 参数，回传给 Quantumult X 接口，可用于曲线实现代理链功能
;host-suffix, example.com, ServerA, via-interface=%TUN%
;ip-cidr, ServerA's IP Range, ServerB

# Local Area Network 局域网，ip 规则
host-suffix, local, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 100.64.0.0/10, direct
ip-cidr, 224.0.0.0/4, direct
ip6-cidr, fe80::/10, direct
ip-cidr, 203.107.1.1/24, reject
ip-cidr, 183.240.197.130/32, direct
final, 黑白名单
# GeoIP China，已采用 ip 池数据，因此注释掉 geoip cn
;geoip, cn, direct

#不在上述规则中(远程以及本地)的剩余请求，将走final 指定的节点/策略，这里即是 → 🕹 终极清单, 请根据自己的需求来选择直连或节点、策略
#此为必需规则，仅可修改对应策略组，请勿删除 final
final, 🕹 终极清单

# > Boxjs设置，使用rewrite方式，访问地址为http://boxjs.com，更新配置后请长按风车-更新，然后重启代理
# > BoxJs相关教程参考 https://chavyleung.gitbook.io/boxjs/


[mitm]
//当使用 Quantumult X 在 M 芯片的 Mac 设备上作为局域网网关时，使用下面的参数来 跳过某些特定设备的 mitm 需求
;skip_src_ip = 192.168.4.50, 92.168.4.51

// 当多个不同的 TCP 连接（非域名类请求）的目标 IP 不同，但这些连接的 TSL 握手 SNI 字段相同时，如需跳过其中某些连接的 MitM hostname 匹配过程，可使用👇参数。
;skip_dst_ip = 123.44.55.4

//本地域名在这里填写
skip_validating_cert = true
force_sni_domain_name = false

hostname = -consumer.fcbox.com, -*huami.com, -weather-data.apple.com, -*amemv.com, -*snssdk.com, -www.google.com

#  passphrase和p12代为证书&主机名部分, 更新配置前可把旧的配置中passphrase和p12代码拷贝下来, 导入新的配置文件把内容粘贴在对应位置就不用重装证书
